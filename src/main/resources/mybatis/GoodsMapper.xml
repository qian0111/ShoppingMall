<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qian.dao.manager.IGoodsDao"><!--namespace属性关联dao层-->

    <!--orm 对象和数据表之间的映射关系-->
    <resultMap id="baseMap" type="com.qian.model.manager.Goods">
        <!--
        column 指定数据表字段
        property 指定类属性
        jdbcType 指定数据类型 int-INTEGER string-VARCHAR
        -->
        <result column="id"            property="id"          jdbcType="INTEGER"/>
        <result column="g_name"        property="gName"       jdbcType="VARCHAR"/>
        <result column="g_image"       property="gImage"      jdbcType="VARCHAR"/>
        <result column="g_price"       property="gPrice"      jdbcType="DECIMAL"/>
        <result column="g_count"       property="gCount"      jdbcType="INTEGER"/>
        <result column="g_status"      property="gStatus"     jdbcType="INTEGER"/>
        <result column="c_id"          property="cId"         jdbcType="INTEGER"/>
        <result column="c_name"        property="cName"       jdbcType="VARCHAR"/>
        <result column="second_c_id"   property="secondCId"   jdbcType="INTEGER"/>
        <result column="second_c_name" property="secondCName" jdbcType="VARCHAR"/>
        <result column="first_c_id"    property="firstCId"    jdbcType="INTEGER"/>
        <result column="first_c_name"  property="firstCName"  jdbcType="VARCHAR"/>
    </resultMap>

    <!--
    parameterType 参数类型
    resultMap 结果集映射 对应的是resultMap.id
    -->
    <select id="query" parameterType="com.qian.model.manager.Goods" resultMap="baseMap">
        <!-- #{} 会自动在变量前后拼一个英文单引号-->
        SELECT g.*,c1.c_name,c1.parent_id AS second_c_id,c2.c_name AS second_c_name,c2.parent_id as first_c_id,c3.c_name as first_c_name
        FROM goods_info AS g
        LEFT JOIN category AS c1 ON g.c_id = c1.id
        LEFT JOIN category AS c2 ON c1.parent_id = c2.id
        LEFT JOIN category AS c3 ON c2.parent_id = c3.id
        <where> <!-- where标签会把标签中的第一条if语句中的and去掉-->
            <if test="id != null ">          AND g.id = #{id} </if>
            <if test="gName != null ">       AND g_name LIKE concat('%',#{gName},'%')</if>
            <if test="gImage != null ">      AND g_image = #{gImage} </if>
            <if test="gPrice != null ">      AND g_price = #{gPrice} </if>
            <if test="gCount != null ">      AND g_count = #{gCount} </if>
            <if test="gStatus != null ">     AND g_status = #{gStatus} </if>
            <if test="cId != null ">         AND c1.id = #{cId} </if>
            <if test="cName != null ">       AND c1.c_name = #{cName} </if>
            <if test="secondCId != null ">   AND c2.id = #{secondCId} </if>
            <if test="secondCName != null "> AND c2.c_name = #{secondCName} </if>
            <if test="firstCId != null ">    AND c3.id = #{firstCId} </if>
            <if test="firstCName != null ">  AND c3.c_name = #{firstCName} </if>
        </where>
        <if test="pageNo != null and pageCount != null">LIMIT #{pageNo}, #{pageCount}</if>
    </select>

    <select id="countOnGoods" parameterType="com.qian.model.manager.Goods" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM goods_info AS g
        LEFT JOIN category AS c1 ON g.c_id = c1.id
        LEFT JOIN category AS c2 ON c1.parent_id = c2.id
        LEFT JOIN category AS c3 ON c2.parent_id = c3.id
        <where> <!-- where标签会把标签中的第一条if语句中的and去掉-->
            <if test="id != null ">          AND g.id = #{id} </if>
            <if test="gName != null ">       AND g_name LIKE concat('%',#{gName},'%')</if>
            <if test="gImage != null ">      AND g_image = #{gImage} </if>
            <if test="gPrice != null ">      AND g_price = #{gPrice} </if>
            <if test="gCount != null ">      AND g_count = #{gCount} </if>
            <if test="gStatus != null ">     AND g_status = #{gStatus} </if>
            <if test="cId != null ">         AND c1.id = #{cId} </if>
            <if test="cName != null ">       AND c1.c_name = #{cName} </if>
            <if test="secondCId != null ">   AND c2.id = #{secondCId} </if>
            <if test="secondCName != null "> AND c2.c_name = #{secondCName} </if>
            <if test="firstCId != null ">    AND c3.id = #{firstCId} </if>
            <if test="firstCName != null ">  AND c3.c_name = #{firstCName} </if>
        </where>
    </select>

    <select id="countOffGoods" parameterType="com.qian.model.manager.Goods" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM goods_info AS g
        LEFT JOIN category AS c1 ON g.c_id = c1.id
        LEFT JOIN category AS c2 ON c1.parent_id = c2.id
        LEFT JOIN category AS c3 ON c2.parent_id = c3.id
        <where> <!-- where标签会把标签中的第一条if语句中的and去掉-->
            <if test="id != null ">          AND g.id = #{id} </if>
            <if test="gName != null ">       AND g_name LIKE concat('%',#{gName},'%')</if>
            <if test="gImage != null ">      AND g_image = #{gImage} </if>
            <if test="gPrice != null ">      AND g_price = #{gPrice} </if>
            <if test="gCount != null ">      AND g_count = #{gCount} </if>
            <if test="gStatus != null ">     AND g_status = #{gStatus} </if>
            <if test="cId != null ">         AND c1.id = #{cId} </if>
            <if test="cName != null ">       AND c1.c_name = #{cName} </if>
            <if test="secondCId != null ">   AND c2.id = #{secondCId} </if>
            <if test="secondCName != null "> AND c2.c_name = #{secondCName} </if>
            <if test="firstCId != null ">    AND c3.id = #{firstCId} </if>
            <if test="firstCName != null ">  AND c3.c_name = #{firstCName} </if>
        </where>
    </select>

    <select id="firstCategory" resultMap="baseMap">
        SELECT id as first_c_id, c_name as first_c_name FROM category
        WHERE level=1
    </select>

    <select id="categoryTree" resultMap="baseMap">
        SELECT c1.id as c_id,c1.c_name,c2.id AS second_c_id,c2.c_name AS second_c_name,c3.id as first_c_id,c3.c_name as first_c_name
        FROM category AS c1
        INNER JOIN category AS c2 ON c1.parent_id = c2.id
        INNER JOIN category AS c3 ON c2.parent_id = c3.id
    </select>

</mapper>








